
# ==============================
# –ò–ú–ü–û–†–¢–´
# ==============================
from const import *  
import nextcord
from nextcord.ext import commands
import os
import logging
import pytz
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ==============================
# –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ì–ï–†–ê
# ==============================
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s | üìã %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
    force=True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
)

# ==============================
# –°–û–ó–î–ê–ù–ò–ï –û–ë–™–ï–ö–¢–ê –ë–û–¢–ê
# ==============================
intents = nextcord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix=".", intents=intents)



@bot.slash_command(name="addvoice", description="–î–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ")
async def addvoice(interaction: nextcord.Interaction, channel: nextcord.VoiceChannel):
    if not interaction.user.guild_permissions.administrator:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        embed = nextcord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.",
                color=nextcord.Color.red()
            )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
        
    tracked_channels.add(channel.id)
    save_tracked_channels(tracked_channels)
        
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞
    embed = nextcord.Embed(
            title="‚úÖ –ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω",
            description=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª `{channel.name}` –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ.",
            color=nextcord.Color.green()
    )
    await interaction.response.send_message(embed=embed, ephemeral=True)

@bot.slash_command(name="removevoice", description="–£–¥–∞–ª–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö")
async def removevoice(interaction: nextcord.Interaction, channel: nextcord.VoiceChannel):
    if not interaction.user.guild_permissions.administrator:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        embed = nextcord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞",
                description="–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.",
                color=nextcord.Color.red()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
        
    if channel.id in tracked_channels:
        tracked_channels.remove(channel.id)
        save_tracked_channels(tracked_channels)
            
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞
        embed = nextcord.Embed(
                title="‚úÖ –ö–∞–Ω–∞–ª —É–¥–∞–ª—ë–Ω",
                description=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª `{channel.name}` –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.",
                color=nextcord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
    else:
        # –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ
        embed = nextcord.Embed(
                title="‚ö† –û—à–∏–±–∫–∞",
                description=f"–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª `{channel.name}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.",
                color=nextcord.Color.yellow()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)




# ==============================
# –§–£–ù–ö–¶–ò–Ø: bot_ready()
# –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
# ==============================
def bot_ready(bot):
    header = "üöÄ –ë–û–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï üöÄ"
    author = "@pristordev"
    separator = "‚ïê" * 30

    logging.info(f"{author} | {header}\n{separator}\n"
                 f"ü§ñ –ë–æ—Ç: {bot.user}\n"
                 f"üÜî ID: {bot.user.id}\n"
                 f"üìÖ –ü–æ–¥–∫–ª—é—á—ë–Ω –∫ {len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–∞–º\n"
                 f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {sum(g.member_count for g in bot.guilds)}\n {separator}\n")
    print(f"‚úÖ –ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")

# ==============================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–ë–´–¢–ò–Ø on_ready
# ==============================
@bot.event
async def on_ready():
    try:
        logging.info("‚úÖ –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        bot.add_application_command(addvoice, overwrite=True)
        bot.add_application_command(removevoice, overwrite=True)
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥: {e}")

    bot_ready(bot)

# ==============================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–ë–´–¢–ò–Ø on_voice_state_update
# ==============================
@bot.event
async def on_voice_state_update(member, before, after):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã
    if after.channel and after.channel.id in load_tracked_channels():
        # –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        join_time = datetime.now(pytz.timezone("Europe/Moscow")).strftime("%Y-%m-%d %H:%M:%S")
        leave_time = "N/A"  # –ü–æ–∫–∞ –Ω–µ –æ—Å—Ç–∞–≤–∏–ª –∫–∞–Ω–∞–ª

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Google Sheets
        log_to_google_sheets(member.display_name, str(member.id), after.channel.name, "–ó–∞—à—ë–ª", join_time, leave_time)

    if before.channel and before.channel.id in load_tracked_channels() and not after.channel:
        # –í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        leave_time = datetime.now(pytz.timezone("Europe/Moscow")).strftime("%Y-%m-%d %H:%M:%S")
        join_time = "N/A"  # –ü–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Google Sheets
        log_to_google_sheets(member.display_name, str(member.id), before.channel.name, "–í—ã—à–µ–ª", join_time, leave_time)

# ==============================
# –§–£–ù–ö–¶–ò–Ø: log_to_google_sheets
# –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É
# ==============================
def log_to_google_sheets(display_name, discord_id, channel_name, action, join_time, leave_time):
    try:
        sheet = connect_to_google_sheets()
        if sheet:
            row = [display_name, discord_id, channel_name, action, join_time, leave_time]  # –î–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
            sheet.append_row(row)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
            logging.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É: {row}")
        else:
            logging.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")

# ==============================
# –§–£–ù–ö–¶–ò–Ø: connect_to_google_sheets
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
# ==============================
def connect_to_google_sheets():
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Google Sheets
        creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', SCOPES)
        client = gspread.authorize(creds)
        sheet = client.open(SHEET_NAME).sheet1  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏
        logging.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets.")
        return sheet
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return None

# ==============================
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# ==============================
print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
bot.run(TOKEN)